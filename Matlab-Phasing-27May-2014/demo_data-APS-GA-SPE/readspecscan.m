function [outdata, outpts, scantype, scandate, ncols, collabels, motors]= readspecscan(name,scan,cols)% [outdata, outpts, scantype, scandate, ncols, collabels]= readspecscan(name,scan,cols)%% read in spec data file and extract specified columns from specified scan% name = file name (string); scan = scalar; cols = scalar or vector% negative column numbers count back from end% cols is optional; default = all% outdata = matrix of scan data% outpts = number of points% scantype (string) = spec scan type% scandate (string) = scan date and time% ncols = number of columns in scan% collabels (string) = labels of columns in file%% 09-Apr-98 Brian Stephenson% stephenson@anl.gov %disp(['Reading file: ' name]);% Note: Uses mkidspec to read entire file at the beginning and index it,% if this hasn't already been done.% Then each scan is located from index (using fseek) % and read by lines (using fgetl). namendx = [name '.ndx'];if 2==exist(namendx)  %disp(['Using existing index file ' namendx]);  fidi = fopen(namendx,'r');  specid = fscanf(fidi,'%g %g',[2 inf]);% Get scan indexes (byte offsets)  idscns = specid(1,:);% Get scan numbers  numscns = specid(2,:);  fclose(fidi);else   [idscns,numscns] = mkidspec(name);end% Find index of specified scanidpos = find(numscns == scan);  if isempty(idpos)    %disp(['Scan ' num2str(scan) ' not found.']);    outdata = [];    outpts = 0;    scantype = '';    scandate = ''    ncols = 0;    collabels = '';else% Read scan header and number of data columns  fid = fopen(name,'r');  %disp(['Reading scan: ' sprintf('%d ',scan)]);  %SH addition--------------------------------      counter =1;  for(i=1:100)      line = fgetl(fid);      if size(line,2)>1 && strcmp(line(1:2),'#O')         %display(line);         remain = line;                while(remain)            [token remain] = strtok(remain);            if( size(token,2)>1 && ~strcmp(token(1:2), '#O') )                motors(counter).name = token;                motors(counter).pos =[];                counter=counter+1;            end        end              end  end  %--------------------------------------------  fseek(fid,idscns(idpos(length(idpos))),'bof');  line = fgetl(fid);%  %disp(line)  blanks = find(line==' ');  scantype = '';  if length(blanks)>=3      scantype = line(1+blanks(3):length(line));      %disp(['Scan type: ' scantype]);  end  line = fgetl(fid);%  %disp(line)  scandate = '';  if length(line)>=3      if strcmp(line(1:2),'#D')          scandate = line(4:length(line));         %disp(['Scan date: ' scandate]);      end  end   ncols = 0;  counter =1;  for ii = 1:50      line = fgetl(fid);      if length(line)>=3        %SH addition---------------------------------                  if strcmp(line(1:2), '#P')            remain = line;            while(remain)                [token remain] = strtok(remain);                %display(token);                if( ~isempty(token))                    if(~strcmp(token(1), '#') )                        motors(counter).pos = str2num(token);                        %display([motors(counter).name '  ' num2str(motors(counter).pos)]);                        counter=counter+1;                    end                end            end                    end        %-------------------------------------------                if strcmp(line(1:2),'#N')          ncols = sscanf(line(3:length(line)),'%d',1);          break;        end      end  end  %disp(['Number of data columns: ' num2str(ncols)]);  line = fgetl(fid);  collabels = '';  if length(line)>=3      collabels = line(3:length(line));      %disp(['Column labels: ' collabels]);  end  if nargin<3, cols = 1:ncols; end  cols = round(cols);  if sum(cols==0)~=0    cols(cols==0)=[];    %disp(['Column zero specification ignored.']);  end   %disp(['Returning column(s): ' sprintf('%d ',cols)]);    % Read scan data      data = zeros(0,ncols);  npts = 0;  while(1)      line = fgetl(fid);      if ~isstr(line),break,end;      if length(line)==0,break,end;      if strcmp(line(1),'#'),break,end;      data = [data;sscanf(line,'%g',ncols)'];      npts = npts + 1;  end  %disp(['Number of data points: ' num2str(npts)]);      if max(abs(cols)) <= ncols      pcols = cols.*(cols>0) + (ncols+1+cols).*(cols<0);       outdata = data(:,pcols);      outpts = npts;  else      disp(['Too few columns in scan ' num2str(iscan)]);      outdata = [];      outpts = 0;  end  fclose(fid);end